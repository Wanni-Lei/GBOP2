% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GBOP2_maxP_TE.gbop2.R
\name{GBOP2_maxP_TE}
\alias{GBOP2_maxP_TE}
\title{PSOGO: Power maximizing design with efficacy and toxicity boundaries}
\arguments{
\item{design}{fixed as "optimal", cannot be modified by user}

\item{pso_method}{method for single PSO, choose from "default", "quantum" or "dexp"}

\item{nlooks}{number of interim looks}

\item{skip_efficacy}{default is NULL, indicate skip efficacy as 1 and not skip as 0 in a vector}

\item{skip_toxicity}{default is NULL, indicate skip toxicity as 1 and not skip as 0 in a vector}

\item{totalPatients}{number of total patients}

\item{Nmin_cohort1}{maximum number of patients}

\item{Nmin_increase}{minimum number of first cohort}

\item{e1n}{H0 for efficacy}

\item{e2n}{H0 for toxicity}

\item{e3n}{H0 for Eff and Tox}

\item{e1a}{H1 for efficacy}

\item{e2a}{H1 for toxicity}

\item{e3a}{H1 for Eff and Tox}

\item{err_eff}{Type I error rate: Efficacious but toxic}

\item{err_tox}{Type I error rate: Safe but futile}

\item{err_all}{Type I error rate: Futile and toxic}

\item{power_eff}{power: Efficacious but toxic}

\item{power_tox}{power: Safe but futile}

\item{power_all}{power: Futile and toxic}

\item{nSwarm}{nSwarm in PSO}

\item{maxIter}{maxIter in PSO}

\item{nParallel}{number of PSO ensemble}

\item{seed}{Random seed for reproducibility}

\item{nCore}{number of core}
}
\value{
A list on design parameters and operating characteristics
}
\description{
This function implements PSOGO to find a power maximizing design with efficacy and toxicity boundaries.
}
\examples{
  GBOP2_maxP_TE(
    design = "optimal",
    nlooks = 1,
    skip_efficacy = NULL,
    skip_toxicity = NULL,
    totalPatients = 20,
    Nmin_cohort1 = 10,
    Nmin_increase = 5,
    nParallel = 3,
    e1n = 0.15, e2n = 0.16, e3n = 0.024,
    e1a = 0.4, e2a = 0.08, e3a = 0.032,
    err_eff = 1, err_tox = 1, err_all = 0.1,
    power_eff = 0.8, power_tox = 0.8, power_all = 0.8,
    seed = 5321, pso_method = "all",
    nSwarm = 32, maxIter = 100, nCore = 8
  )
  

}
